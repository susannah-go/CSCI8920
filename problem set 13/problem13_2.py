from problem12_1 import int2string
from problem12_1 import modular_inverse

# provided values
n = 402394248802762560784459411647796431108620322919897426002417858465984510150839043308712123310510922610690378085519407742502585978563438101321191019034005392771936629869360205383247721026151449660543966528254014636648532640397857580791648563954248342700568953634713286153354659774351731627683020456167612375777
e1 = 3
e2 = 2 ** 16 + 1
c1 = 4020137574131575546540268502595841326627069047574502831387774931737219358054228401772587980633053000
c2 = 170356929377044754324767086491413709789303946387160918939626824506821140429868670769571821346366209258416985269309515948776691067548265629489478628756185802183547222688698309731374342109385922509501909728895585636684978295199882599818258590851085977232207148101448845575681189389906429149193460620083999406237

# computed manually
k = 21846

# recover the message
# the roles of c1 and c2 are reversed from my mathemtaical derivation because the values of e1 and e3 are reversed
temp_1 = modular_inverse(c2, n)
temp_2 = c1 ** k % n
m = int2string(temp_1 * temp_2 % n)
print(m)
